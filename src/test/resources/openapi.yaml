openapi: 3.0.0
info:
  description: "Description: in db already created 2 players: \n1. login: supervisor, with role: supervisor.\n2. login: admin, with role: admin"
  title: "interview-test-app"
  version: "1.0.0"
servers:
  - url: "http://3.68.165.45"
paths:
  /player/create/{editor}:
    get:
      tags:
        - "player-controller"
      summary: "createPlayer"
      operationId: "createPlayerUsingGET"
      parameters:
        - name: "age"
          in: "query"
          description: "age"
          required: true
          schema:
            type: "string"
        - name: "editor"
          in: "path"
          description: "editor"
          required: true
          schema:
            type: "string"
        - name: "gender"
          in: "query"
          description: "gender"
          required: true
          schema:
            type: "string"
        - name: "login"
          in: "query"
          description: "login"
          required: true
          schema:
            type: "string"
        - name: "password"
          in: "query"
          description: "password"
          required: false
          schema:
            type: "string"
        - name: "role"
          in: "query"
          description: "role"
          required: true
          schema:
            type: "string"
        - name: "screenName"
          in: "query"
          description: "screenName"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerCreateResponseDto"
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
  /player/delete/{editor}:
    delete:
      tags:
        - "player-controller"
      summary: "deletePlayer"
      operationId: "deletePlayerUsingDELETE"
      parameters:
        - name: "editor"
          in: "path"
          description: "editor"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerDeleteRequestDto"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseEntity"
        '204':
          description: "No Content"
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
  /player/get:
    post:
      tags:
        - "player-controller"
      summary: "getPlayerByPlayerId"
      operationId: "getPlayerByPlayerIdUsingPOST"
      requestBody:
        description: "request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerGetByPlayerIdRequestDto"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerGetByPlayerIdResponseDto"
        '201':
          description: "Created"
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
  /player/get/all:
    get:
      tags:
        - "player-controller"
      summary: "getAllPlayers"
      operationId: "getAllPlayersUsingGET"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerGetAllResponseDto"
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
  /player/update/{editor}/{id}:
    patch:
      tags:
        - "player-controller"
      summary: "updatePlayer"
      operationId: "updatePlayerUsingPATCH"
      parameters:
        - name: "editor"
          in: "path"
          description: "editor"
          required: true
          schema:
            type: "string"
        - name: "id"
          in: "path"
          description: "id"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "request"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlayerUpdateRequestDto"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerUpdateResponseDto"
        '204':
          description: "No Content"
        '401':
          description: "Unauthorized"
        '403':
          description: "Forbidden"
components:
  schemas:
    PlayerCreateResponseDto:
      type: "object"
      properties:
        age:
          type: "integer"
          format: "int32"
        gender:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        password:
          type: "string"
        role:
          type: "string"
        screenName:
          type: "string"
    PlayerDeleteRequestDto:
      type: "object"
      properties:
        playerId:
          type: "integer"
          format: "int64"
    PlayerGetAllResponseDto:
      type: "object"
      properties:
        players:
          type: "array"
          items:
            $ref: "#/components/schemas/PlayerItem"
    PlayerGetByPlayerIdRequestDto:
      type: "object"
      properties:
        playerId:
          type: "integer"
          format: "int64"
    PlayerGetByPlayerIdResponseDto:
      type: "object"
      properties:
        age:
          type: "integer"
          format: "int32"
        gender:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        password:
          type: "string"
        role:
          type: "string"
        screenName:
          type: "string"
    PlayerItem:
      type: "object"
      properties:
        age:
          type: "integer"
          format: "int32"
        gender:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        role:
          type: "string"
        screenName:
          type: "string"
    PlayerUpdateRequestDto:
      type: "object"
      properties:
        age:
          type: "integer"
          format: "int32"
        gender:
          type: "string"
        login:
          type: "string"
        password:
          type: "string"
        role:
          type: "string"
        screenName:
          type: "string"
    PlayerUpdateResponseDto:
      type: "object"
      properties:
        age:
          type: "integer"
          format: "int32"
        gender:
          type: "string"
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        role:
          type: "string"
        screenName:
          type: "string"
    ResponseEntity:
      type: "object"
      properties:
        body:
          type: "object"
        statusCode:
          type: "string"
          enum:
            - "100 CONTINUE"
            - "101 SWITCHING_PROTOCOLS"
            - "102 PROCESSING"
            - "103 CHECKPOINT"
            - "200 OK"
            - "201 CREATED"
            - "202 ACCEPTED"
            - "203 NON_AUTHORITATIVE_INFORMATION"
            - "204 NO_CONTENT"
            - "205 RESET_CONTENT"
            - "206 PARTIAL_CONTENT"
            - "207 MULTI_STATUS"
            - "208 ALREADY_REPORTED"
            - "226 IM_USED"
            - "300 MULTIPLE_CHOICES"
            - "301 MOVED_PERMANENTLY"
            - "302 FOUND"
            - "302 MOVED_TEMPORARILY"
            - "303 SEE_OTHER"
            - "304 NOT_MODIFIED"
            - "305 USE_PROXY"
            - "307 TEMPORARY_REDIRECT"
            - "308 PERMANENT_REDIRECT"
            - "400 BAD_REQUEST"
            - "401 UNAUTHORIZED"
            - "402 PAYMENT_REQUIRED"
            - "403 FORBIDDEN"
            - "404 NOT_FOUND"
            - "405 METHOD_NOT_ALLOWED"
            - "406 NOT_ACCEPTABLE"
            - "407 PROXY_AUTHENTICATION_REQUIRED"
            - "408 REQUEST_TIMEOUT"
            - "409 CONFLICT"
            - "410 GONE"
            - "411 LENGTH_REQUIRED"
            - "412 PRECONDITION_FAILED"
            - "413 PAYLOAD_TOO_LARGE"
            - "413 REQUEST_ENTITY_TOO_LARGE"
            - "414 URI_TOO_LONG"
            - "414 REQUEST_URI_TOO_LONG"
            - "415 UNSUPPORTED_MEDIA_TYPE"
            - "416 REQUESTED_RANGE_NOT_SATISFIABLE"
            - "417 EXPECTATION_FAILED"
            - "418 I_AM_A_TEAPOT"
            - "419 INSUFFICIENT_SPACE_ON_RESOURCE"
            - "420 METHOD_FAILURE"
            - "421 DESTINATION_LOCKED"
            - "422 UNPROCESSABLE_ENTITY"
            - "423 LOCKED"
            - "424 FAILED_DEPENDENCY"
            - "425 TOO_EARLY"
            - "426 UPGRADE_REQUIRED"
            - "428 PRECONDITION_REQUIRED"
            - "429 TOO_MANY_REQUESTS"
            - "431 REQUEST_HEADER_FIELDS_TOO_LARGE"
            - "451 UNAVAILABLE_FOR_LEGAL_REASONS"
            - "500 INTERNAL_SERVER_ERROR"
            - "501 NOT_IMPLEMENTED"
            - "502 BAD_GATEWAY"
            - "503 SERVICE_UNAVAILABLE"
            - "504 GATEWAY_TIMEOUT"
            - "505 HTTP_VERSION_NOT_SUPPORTED"
            - "506 VARIANT_ALSO_NEGOTIATES"
            - "507 INSUFFICIENT_STORAGE"
            - "508 LOOP_DETECTED"
            - "509 BANDWIDTH_LIMIT_EXCEEDED"
            - "510 NOT_EXTENDED"
            - "511 NETWORK_AUTHENTICATION_REQUIRED"
        statusCodeValue:
          type: "integer"
          format: "int32"
